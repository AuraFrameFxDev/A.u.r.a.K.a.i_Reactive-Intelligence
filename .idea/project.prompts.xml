<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="PromptTemplates">
    <option name="builtInPromptOverrides">
      <list>
        <BuiltInPromptOverride>
          <option name="groupId" value="rules" />
          <option name="promptId" value="project" />
          <option name="text" value="# GitHub Actions Workflow Best Practices&#10;&#10;This guide ensures all GitHub Actions workflows follow best practices for the AURAKAI project.&#10;&#10;## Required Workflow Setup&#10;&#10;All CI/CD workflows must follow these patterns to ensure reliability and consistency.&#10;&#10;### 1. Java Setup (Required)&#10;&#10;Always use explicit versions and enable toolchain auto-provisioning:&#10;&#10;```yaml&#10;- name: Setup Java&#10;  uses: actions/setup-java@v5&#10;  with:&#10;    distribution: 'temurin'&#10;    java-version: '24'  # Match project's Java version&#10;```&#10;&#10;**Why:** Ensures consistent Java environment across all builds.&#10;&#10;### 2. Android SDK Setup (Required for Android builds)&#10;&#10;```yaml&#10;- name: Set up Android SDK&#10;  uses: android-actions/setup-android@v3&#10;&#10;- name: Accept Android SDK Licenses&#10;  run: yes | sdkmanager --licenses&#10;&#10;- name: Install NDK and CMake (if needed)&#10;  run: |&#10;    sdkmanager &quot;ndk;25.2.9519653&quot; &quot;cmake;3.22.1&quot;&#10;```&#10;&#10;**Why:** Ensures Android build tools are available and licenses are accepted.&#10;&#10;### 3. Gradle Setup (Required)&#10;&#10;Use the official Gradle action for caching and setup:&#10;&#10;```yaml&#10;- name: Setup Gradle&#10;  uses: gradle/actions/setup-gradle@v5&#10;```&#10;&#10;**Why:** Provides robust caching and consistent Gradle environment.&#10;&#10;### 4. Make gradlew Executable (Required)&#10;&#10;```yaml&#10;- name: Ensure gradlew is executable&#10;  run: chmod +x ./gradlew&#10;```&#10;&#10;**Why:** Git may not preserve execute permissions across platforms.&#10;&#10;### 5. Environment Variables&#10;&#10;Set required environment variables at the job or workflow level:&#10;&#10;```yaml&#10;env:&#10;  JAVA_VERSION: '24'&#10;  # Add other required env vars here&#10;```&#10;&#10;**Why:** Centralizes configuration and makes versions easy to update.&#10;&#10;## Workflow Order of Operations&#10;&#10;### Correct Build Flow&#10;&#10;```yaml&#10;steps:&#10;  1. Checkout code&#10;  2. Make gradlew executable&#10;  3. Setup Gradle (for caching)&#10;  4. Setup Java&#10;  5. Setup Android SDK (if needed)&#10;  6. Accept SDK licenses&#10;  7. Install NDK/CMake (if needed)&#10;  8. Run build/test tasks&#10;```&#10;&#10;**Why:** Each step depends on the previous ones being complete.&#10;&#10;### Build Commands&#10;&#10;```yaml&#10;# Build all modules in parallel&#10;- name: Build All Modules&#10;  run: ./gradlew build --parallel&#10;&#10;# Run tests with continue on failure&#10;- name: Run Tests&#10;  run: ./gradlew test --continue&#10;```&#10;&#10;**Why:** `--parallel` speeds up builds; `--continue` shows all test failures.&#10;&#10;## Error Handling&#10;&#10;### Provide Clear Error Messages&#10;&#10;```yaml&#10;- name: Build Application&#10;  run: |&#10;    if ! ./gradlew build; then&#10;      echo &quot;❌ Build failed&quot;&#10;      echo &quot;Check the following:&quot;&#10;      echo &quot;1. All plugins are correctly applied&quot;&#10;      echo &quot;2. Java toolchain is available&quot;&#10;      echo &quot;3. File paths are correct&quot;&#10;      exit 1&#10;    fi&#10;```&#10;&#10;### Capture Build Artifacts on Failure&#10;&#10;```yaml&#10;- name: Upload Build Reports on Failure&#10;  if: failure()&#10;  uses: actions/upload-artifact@v4&#10;  with:&#10;    name: build-reports&#10;    path: |&#10;      **/build/reports/&#10;      **/build/test-results/&#10;```&#10;&#10;## Security Best Practices&#10;&#10;### Never Expose Secrets&#10;&#10;```yaml&#10;# ✅ CORRECT: Use GitHub Secrets&#10;- name: Deploy&#10;  env:&#10;    API_KEY: ${{ secrets.API_KEY }}&#10;  run: ./deploy.sh&#10;&#10;# ❌ WRONG: Hardcoded secrets&#10;- name: Deploy&#10;  env:&#10;    API_KEY: &quot;my-secret-key-123&quot;  # NEVER DO THIS&#10;  run: ./deploy.sh&#10;```&#10;&#10;### Validate Inputs&#10;&#10;```yaml&#10;- name: Validate Input&#10;  if: github.event_name == 'workflow_dispatch'&#10;  run: |&#10;    if [[ ! &quot;${{ github.event.inputs.branch }}&quot; =~ ^(main|mindeye|memcortex)$ ]]; then&#10;      echo &quot;❌ Invalid branch: ${{ github.event.inputs.branch }}&quot;&#10;      exit 1&#10;    fi&#10;```&#10;&#10;## Complete Example Workflow&#10;&#10;```yaml&#10;name: Build and Test&#10;&#10;on:&#10;  push:&#10;    branches: [main, mindeye, memcortex]&#10;  pull_request:&#10;    branches: [main]&#10;&#10;env:&#10;  JAVA_VERSION: '24'&#10;&#10;jobs:&#10;  build:&#10;    name: Build and Test&#10;    runs-on: ubuntu-latest&#10;    &#10;    steps:&#10;      - name: Checkout Code&#10;        uses: actions/checkout@v5&#10;      &#10;      - name: Make gradlew Executable&#10;        run: chmod +x ./gradlew&#10;      &#10;      - name: Setup Gradle&#10;        uses: gradle/actions/setup-gradle@v5&#10;      &#10;      - name: Setup Java&#10;        uses: actions/setup-java@v5&#10;        with:&#10;          distribution: 'temurin'&#10;          java-version: ${{ env.JAVA_VERSION }}&#10;      &#10;      - name: Setup Android SDK&#10;        uses: android-actions/setup-android@v3&#10;      &#10;      - name: Accept Android SDK Licenses&#10;        run: yes | sdkmanager --licenses&#10;      &#10;      - name: Build All Modules&#10;        run: |&#10;          echo &quot; Building Genesis Protocol...&quot;&#10;          ./gradlew build --parallel&#10;      &#10;      - name: Run Tests&#10;        run: ./gradlew test --continue&#10;      &#10;      - name: Upload Build Reports on Failure&#10;        if: failure()&#10;        uses: actions/upload-artifact@v4&#10;        with:&#10;          name: build-reports&#10;          path: |&#10;            **/build/reports/&#10;            **/build/test-results/&#10;      &#10;      - name: Upload APK&#10;        if: success()&#10;        uses: actions/upload-artifact@v4&#10;        with:&#10;          name: app-apk&#10;          path: app/build/outputs/apk/**/*.apk&#10;```&#10;&#10;## Troubleshooting Common Issues&#10;&#10;### Java Toolchain Download Fails&#10;&#10;**Symptom:** `Unable to download toolchain matching the requirements`&#10;&#10;**Solutions:**&#10;1. Check if Java 24 is available from Foojay repository&#10;2. Verify network connectivity in CI&#10;3. Ensure `org.gradle.java.installations.auto-download=true` in `gradle.properties`&#10;4. Consider using a fallback Java version in workflow if cutting-edge version unavailable&#10;&#10;### Android Plugin Not Found&#10;&#10;**Symptom:** `Plugin with id 'com.android.application' not found`&#10;&#10;**Solutions:**&#10;1. Verify `pluginManagement` in `settings.gradle.kts` includes Google repository&#10;2. Check that AGP version is compatible with Gradle version&#10;3. Ensure build-logic is included: `includeBuild(&quot;build-logic&quot;)`&#10;&#10;### File Path Not Found&#10;&#10;**Symptom:** `File not found: /path/to/file`&#10;&#10;**Solutions:**&#10;1. Verify file exists in repository&#10;2. Use `${{ github.workspace }}` for absolute paths&#10;3. Check if file is excluded by `.gitignore`&#10;4. Confirm checkout action completed successfully&#10;&#10;### Build Hangs or Timeouts&#10;&#10;**Symptom:** Workflow exceeds time limit or appears frozen&#10;&#10;**Solutions:**&#10;1. Check for missing `--parallel` flag on build command&#10;2. Verify Gradle daemon is enabled&#10;3. Reduce memory requirements if using large heap&#10;4. Add timeout to individual steps: `timeout-minutes: 30`&#10;&#10;## Continuous Improvement&#10;&#10;When workflows fail:&#10;1. Document the failure in issue tracker&#10;2. Update this guide with the solution&#10;3. Consider adding pre-flight checks to prevent recurrence&#10;4. Share learnings with the team&#10;&#10;## Related Documentation&#10;&#10;- [Main Agent Instructions](../AGENT_INSTRUCTIONS.md)&#10;- [Build System Documentation](../BUILD.md)&#10;- [Contributing Guide](../CONTRIBUTING.md)&#10;&#10;---&#10;&#10;**Last Updated:** 2025-01-06&#10;**Version:** 1.0&#10;**Maintained by:** Genesis Protocol DevOps Team&#10;" />
        </BuiltInPromptOverride>
      </list>
    </option>
  </component>
</project>